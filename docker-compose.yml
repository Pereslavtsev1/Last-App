services:
  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: root
      PG_DATA: /var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - microservices-app
    restart: unless-stopped


  mongo:
    image: mongo
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - mongo:/data
    ports:
      - 27017:27017
    networks:
      - microservices-app

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=root
    networks:
      - microservices-app

  mail-dev:
    container_name: mail-dev
    image: maildev/maildev
    ports:
      - 1080:1080
      - 1025:1025
    networks:
      - microservices-app

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - microservices-app

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    networks:
      - microservices-app


networks:
  microservices-app:
    driver: bridge

volumes:
  postgres:
  mongo:
